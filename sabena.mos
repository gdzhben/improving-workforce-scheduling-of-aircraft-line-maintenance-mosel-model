model sabena
 uses "mmxprs", "mmsheet","mmnl"

parameters
  dir = 'mmsheet.xls:mosel_data.xls'
end-parameters

declarations
    size_of_dataset = 1..200
    hours_of_a_day = 0..23
    ! days_in_week = 1..7

    FlightNo: array(size_of_dataset) of string
    Airline: array(size_of_dataset) of string
    STADay: array(size_of_dataset) of real
    STATime: array(size_of_dataset) of real
    STDDay: array(size_of_dataset) of real
    STDTime: array(size_of_dataset) of real
    Demand:array(size_of_dataset) of real
    NoHoursStayed:array(size_of_dataset) of real
    DemandEachHour:array(size_of_dataset) of real

    ShiftCostDay: array(1..1) of real
    ShiftCostMorning: array(1..1) of real
    ShiftCostEvening: array(1..1) of real
    ShiftCostNight: array(1..1) of real

    ShiftCostSatDay: array(1..1) of real
    ShiftCostSatMorning: array(1..1) of real
    ShiftCostSatEvening: array(1..1) of real
    ShiftCostSatNight: array(1..1) of real

    ShiftCostSunDay: array(1..1) of real
    ShiftCostSunMorning: array(1..1) of real
    ShiftCostSunEvening: array(1..1) of real
    ShiftCostSunNight: array(1..1) of real

    NightBonus: array(1..1) of real

    MaxNumberOfTeam: integer
    team_size = 6000000000000000000000

    CBuffer = 0.25
    start_hour_morning = 5
    end_hour_morning = 10
    morning_work_hours = end_hour_morning-start_hour_morning

    start_hour_day = 10
    end_hour_day = 19
    day_work_hours =end_hour_day-start_hour_day

    start_hour_evening = 17
    end_hour_evening = 23
    evening_work_hours = end_hour_evening-start_hour_evening

    start_hour_night =  23
    end_hour_night = 7
    night_work_hours = 24-start_hour_night+end_hour_night


    demand_monday: array(hours_of_a_day) of real
    demand_tuesday: array(hours_of_a_day) of real
    demand_wednesday: array(hours_of_a_day) of real
    demand_thursday: array(hours_of_a_day) of real
    demand_friday: array(hours_of_a_day) of real
    demand_saturday: array(hours_of_a_day) of real
    demand_sunday: array(hours_of_a_day) of real


    name_of_shift = ["MondayMorning","MondayDay","MondayEvening","MondayNight",
    "TuesdayMorning","TuesdayDay","TuesdayEvening","TuesdayNight",
    "WednesdayMorning","WednesdayDay","WednesdayEvening","WednesdayNight",
    "ThursdayMorning","ThursdayDay","ThursdayEvening","ThursdayNight",
    "FridayMorning","FridayDay","FridayEvening","FridayNight",
    "SaturdayMorning","SaturdayDay","SaturdayEvening","SaturdayNight",
    "SundayMorning","SundayDay","SundayEvening","SundayNight"]


    Team: array(1..6,1..7,1..4) of mpvar


end-declarations
procedure print_status
  declarations
    status: string
  end-declarations
  case getprobstat of
    XPRS_OPT: status:="Optimum found"
    XPRS_UNF: status:="Unfinished"
    XPRS_INF: status:="Infeasible"
    XPRS_UNB: status:="Unbounded"
    XPRS_OTH: status:="Failed"
    else      status:="???"
  end-case
  writeln("Problem status: ", status)
end-procedure
procedure reading_data_from_file
initializations from dir
  [FlightNo,Airline,STADay,STATime,STDDay,STDTime,Demand,NoHoursStayed] as "[Sheet1$A2:I300]"
  [ShiftCostMorning,ShiftCostDay,ShiftCostEvening,ShiftCostNight,NightBonus] as "[Sheet2$A2:F2]"
  [ShiftCostSatDay,ShiftCostSatMorning,ShiftCostSatEvening,ShiftCostSatNight] as "[Sheet2$A3:E3]"
  [ShiftCostSunDay,ShiftCostSunMorning,ShiftCostSunEvening,ShiftCostSunNight] as "[Sheet2$A4:E4]"
  MaxNumberOfTeam as "[Sheet3$A2:B3]"

end-initializations
end-procedure
procedure data_preprocessing
forall(i in size_of_dataset) do
    NoHoursStayed(i) := NoHoursStayed(i) / 100
    DemandEachHour(i) := Demand(i)/ NoHoursStayed(i)
end-do
forall(i in size_of_dataset,j in hours_of_a_day) do
        if STADay(i) = 1 then
            if STATime(i) <= j*100 or STDTime(i) > j*100  then
            demand_monday(j) := demand_monday(j) + DemandEachHour(i)
            end-if
        elif STADay(i) = 2 then
            if STATime(i) <= j*100 or STDTime(i) > j*100  then
            demand_tuesday(j) := demand_tuesday(j) + DemandEachHour(i)
            end-if
        elif STADay(i) = 3 then
            if STATime(i) <= j*100 or STDTime(i) > j*100  then
            demand_wednesday(j) := demand_wednesday(j) + DemandEachHour(i)
            end-if
        elif STADay(i) = 4 then
            if STATime(i) <= j*100 or STDTime(i) > j*100  then
            demand_thursday(j) := demand_thursday(j) + DemandEachHour(i)
            end-if
        elif STADay(i) = 5 then
            if STATime(i) <= j*100 or STDTime(i) > j*100  then
            demand_friday(j) := demand_friday(j) + DemandEachHour(i)
            end-if
        elif STADay(i) = 6 then
            if STATime(i) <= j*100 or STDTime(i) > j*100  then
            demand_saturday(j) := demand_saturday(j) + DemandEachHour(i)
            end-if
        else
            if STATime(i) <= j*100 or STDTime(i) > j*100  then
            demand_sunday(j) := demand_sunday(j) + DemandEachHour(i)
            end-if
        end-if
end-do
end-procedure
procedure printing_all_data
writeln(FlightNo,"\n",Airline,"\n", STADay,"\n",STATime ,"\n",STDDay ,"\n",STDTime,"\n",Demand,"\n",NoHoursStayed,"\n",DemandEachHour)

writeln("demand_monday-sun",demand_monday,"\n",demand_tuesday,"\n", demand_wednesday,"\n",demand_thursday ,"\n",demand_friday ,"\n",demand_saturday,"\n",demand_sunday)

writeln(ShiftCostMorning,ShiftCostDay,ShiftCostEvening,ShiftCostNight,NightBonus)

writeln(ShiftCostSatDay,ShiftCostSatMorning,ShiftCostSatEvening,ShiftCostSatNight)

writeln(ShiftCostSunDay,ShiftCostSunMorning,ShiftCostSunEvening,ShiftCostSunNight)
writeln(MaxNumberOfTeam)
end-procedure

procedure print_result
forall(i in 1..6)do
writeln("")
writeln("------------------------------------------------------")
writeln("Team - ",i)
writeln("MondayMorning:\t",getsol(Team(i,1,1)),"\n","MondayDay:\t",getsol(Team(i,1,2)),"\n","MondayEvening:\t",getsol(Team(i,1,3)),"\n","MondayNight:\t",getsol(Team(i,1,4)),"\n",
    "\nTuesdayMorning:\t",getsol(Team(i,2,1)),"\n","TuesdayDay:\t",getsol(Team(i,2,2)),"\n","TuesdayEvening:\t",getsol(Team(i,2,3)),"\n","TuesdayNight:\t",getsol(Team(i,2,4)),"\n",
    "\nWednesdayMorning:\t",getsol(Team(i,3,1)),"\n","WednesdayDay:\t",getsol(Team(i,3,2)),"\n","WednesdayEvening:\t",getsol(Team(i,3,3)),"\n","WednesdayNight:\t",getsol(Team(i,3,4)),"\n",
    "\nThursdayMorning:\t",getsol(Team(i,4,1)),"\n","ThursdayDay:\t",getsol(Team(i,4,2)),"\n","ThursdayEvening:\t",getsol(Team(i,4,3)),"\n","ThursdayNight:\t",getsol(Team(i,4,4)),"\n",
    "\nFridayMorning:\t",getsol(Team(i,5,1)),"\n","FridayDay:\t",getsol(Team(i,5,2)),"\n","FridayEvening:\t",getsol(Team(i,5,3)),"\n","FridayNight:\t",getsol(Team(i,5,4)),"\n",
    "\nSaturdayMorning:\t",getsol(Team(i,6,1)),"\n","SaturdayDay:\t",getsol(Team(i,6,2)),"\n","SaturdayEvening:\t",getsol(Team(i,6,3)),"\n","SaturdayNight:\t",getsol(Team(i,6,4)),"\n",
    "\nSundayMorning:\t",getsol(Team(i,7,1)),"\n","SundayDay:\t",getsol(Team(i,7,2)),"\n","SundayEvening:\t",getsol(Team(i,7,3)),"\n","SundayNight:\t", getsol(Team(i,7,4)),"\n")
end-do
writeln("------------------------------------------------------")
writeln("")
end-procedure

procedure cons

! constrain 2
forall(i in 1..6,j in 1..5)do
    sum(k in 1..4) Team(i,j,k)<=6
end-do
! constrain 3
forall(i in 1..6,j in 6..7)do
    sum(k in 1..4) Team(i,j,k)<=0.5*6
end-do
! ! constrain 4
forall(i in 1..6)do
    sum(d in 1..7, s in 1..4) 9*Team(i,d,s)>=36
end-do

forall(i in 1..6)do
    sum(d in 1..7, s in 1..4) 9*Team(i,d,s)<=38
end-do

! constrain 7
forall(i in start_hour_morning..end_hour_morning) do
    demand_monday(i)<=((sum(j in 1..6) Team(j,1,1))-1)*team_size
      demand_tuesday(i)<=((sum(j in 1..6) Team(j,2,1))-1)*team_size
        demand_wednesday(i)<=((sum(j in 1..6) Team(j,3,1))-1)*team_size
          demand_thursday(i)<=((sum(j in 1..6) Team(j,4,1))-1)*team_size
            demand_friday(i)<=((sum(j in 1..6) Team(j,5,1))-1)*team_size
              demand_saturday(i)<=((sum(j in 1..6) Team(j,6,1))-1)*team_size
                demand_sunday(i)<=((sum(j in 1..6) Team(j,7,1))-1)*team_size
end-do
forall(i in start_hour_day..end_hour_day) do
    demand_monday(i)<=((sum(j in 1..6) Team(j,1,2))-1)*team_size
      demand_tuesday(i)<=((sum(j in 1..6) Team(j,2,2))-1)*team_size
        demand_wednesday(i)<=((sum(j in 1..6) Team(j,3,2))-1)*team_size
          demand_thursday(i)<=((sum(j in 1..6) Team(j,4,2))-1)*team_size
            demand_friday(i)<=((sum(j in 1..6) Team(j,5,2))-1)*team_size
              demand_saturday(i)<=((sum(j in 1..6) Team(j,6,2))-1)*team_size
                demand_sunday(i)<=((sum(j in 1..6) Team(j,7,2))-1)*team_size
end-do
forall(i in start_hour_evening..end_hour_evening) do

    demand_monday(i)<=((sum(j in 1..6) Team(j,1,3))-1)*team_size
    demand_tuesday(i)<=((sum(j in 1..6) Team(j,2,3))-1)*team_size
        demand_wednesday(i)<=((sum(j in 1..6) Team(j,3,3))-1)*team_size
          demand_thursday(i)<=((sum(j in 1..6) Team(j,4,3))-1)*team_size
            demand_friday(i)<=((sum(j in 1..6) Team(j,5,3))-1)*team_size
              demand_saturday(i)<=((sum(j in 1..6) Team(j,6,3))-1)*team_size
                demand_sunday(i)<=((sum(j in 1..6) Team(j,7,3))-1)*team_size
end-do
forall(i in start_hour_night..23) do
demand_monday(i)<=((sum(j in 1..6) Team(j,1,4))-1)*team_size
    demand_tuesday(i)<=((sum(j in 1..6) Team(j,2,4))-1)*team_size
        demand_wednesday(i)<=((sum(j in 1..6) Team(j,3,4))-1)*team_size
          demand_thursday(i)<=((sum(j in 1..6) Team(j,4,4))-1)*team_size
            demand_friday(i)<=((sum(j in 1..6) Team(j,5,4))-1)*team_size
              demand_saturday(i)<=((sum(j in 1..6) Team(j,6,4))-1)*team_size
                demand_sunday(i)<=((sum(j in 1..6) Team(j,7,4))-1)*team_size

end-do
forall(i in 0..end_hour_night) do
demand_monday(i)<=((sum(j in 1..6) Team(j,1,4))-1)*team_size
    demand_tuesday(i)<=((sum(j in 1..6) Team(j,2,4))-1)*team_size
        demand_wednesday(i)<=((sum(j in 1..6) Team(j,3,4))-1)*team_size
          demand_thursday(i)<=((sum(j in 1..6) Team(j,4,4))-1)*team_size
            demand_friday(i)<=((sum(j in 1..6) Team(j,5,4))-1)*team_size
              demand_saturday(i)<=((sum(j in 1..6) Team(j,6,4))-1)*team_size
                demand_sunday(i)<=((sum(j in 1..6) Team(j,7,4))-1)*team_size

end-do



! ! constrain 8
! forall(i in start_hour_morning..end_hour_morning) do
!     demand_monday(i)<=(sum(j in 1..6) Team(j,1,1))*team_size
!       demand_tuesday(i)<=(sum(j in 1..6) Team(j,2,1))*team_size
!         demand_wednesday(i)<=(sum(j in 1..6) Team(j,3,1))*team_size
!           demand_thursday(i)<=(sum(j in 1..6) Team(j,4,1))*team_size
!             demand_friday(i)<=(sum(j in 1..6) Team(j,5,1))*team_size
!               demand_saturday(i)<=(sum(j in 1..6) Team(j,6,1))*team_size
!                 demand_sunday(i)<=(sum(j in 1..6) Team(j,7,1))*team_size
! end-do
! forall(i in start_hour_day..end_hour_day) do
!     demand_monday(i)<=((sum(j in 1..6) Team(j,1,2)))*team_size
!       demand_tuesday(i)<=((sum(j in 1..6) Team(j,2,2)))*team_size
!         demand_wednesday(i)<=((sum(j in 1..6) Team(j,3,2)))*team_size
!           demand_thursday(i)<=((sum(j in 1..6) Team(j,4,2)))*team_size
!             demand_friday(i)<=((sum(j in 1..6) Team(j,5,2)))*team_size
!               demand_saturday(i)<=((sum(j in 1..6) Team(j,6,2)))*team_size
!                 demand_sunday(i)<=((sum(j in 1..6) Team(j,7,2)))*team_size
! end-do
! forall(i in start_hour_evening..end_hour_evening) do

!     demand_monday(i)<=((sum(j in 1..6) Team(j,1,3)))*team_size
!     demand_tuesday(i)<=((sum(j in 1..6) Team(j,2,3)))*team_size
!         demand_wednesday(i)<=((sum(j in 1..6) Team(j,3,3)))*team_size
!           demand_thursday(i)<=((sum(j in 1..6) Team(j,4,3)))*team_size
!             demand_friday(i)<=((sum(j in 1..6) Team(j,5,3)))*team_size
!               demand_saturday(i)<=((sum(j in 1..6) Team(j,6,3)))*team_size
!                 demand_sunday(i)<=((sum(j in 1..6) Team(j,7,3)))*team_size
! end-do
! forall(i in start_hour_night..23) do
! demand_monday(i)<=((sum(j in 1..6) Team(j,1,4)))*team_size
!     demand_tuesday(i)<=((sum(j in 1..6) Team(j,2,4)))*team_size
!         demand_wednesday(i)<=((sum(j in 1..6) Team(j,3,4)))*team_size
!           demand_thursday(i)<=((sum(j in 1..6) Team(j,4,4)))*team_size
!             demand_friday(i)<=((sum(j in 1..6) Team(j,5,4)))*team_size
!               demand_saturday(i)<=((sum(j in 1..6) Team(j,6,4)))*team_size
!                 demand_sunday(i)<=((sum(j in 1..6) Team(j,7,4)))*team_size

! end-do
! forall(i in 0..end_hour_night) do
! demand_monday(i)<=((sum(j in 1..6) Team(j,1,4)))*team_size
!     demand_tuesday(i)<=((sum(j in 1..6) Team(j,2,4)))*team_size
!         demand_wednesday(i)<=((sum(j in 1..6) Team(j,3,4)))*team_size
!           demand_thursday(i)<=((sum(j in 1..6) Team(j,4,4)))*team_size
!             demand_friday(i)<=((sum(j in 1..6) Team(j,5,4)))*team_size
!               demand_saturday(i)<=((sum(j in 1..6) Team(j,6,4)))*team_size
!                 demand_sunday(i)<=((sum(j in 1..6) Team(j,7,4)))*team_size

! end-do
! ! constrain 9
total_demand:= sum(m in size_of_dataset) Demand(m)
total_demand<=(sum(i in 1..6, j in 1..7, k in 1..4) Team(i,j,k)) *6*((morning_work_hours+day_work_hours+evening_work_hours+night_work_hours)/4)

! ! constrain 10
forall(i in 1..6,j in 1..7)do
  (sum(k in 1..4) Team(i,j,k))<=1
end-do

! ! constrain 11
! forall(i in 1..4,j in 1..7)do
!   (sum(k in 1..6) Team(k,j,i))>=1
! end-do

end-procedure


reading_data_from_file
data_preprocessing
! printing_all_data


forall(i in 1..6,j in 1..7,k in 1..4) do
 Team(i,j,k) is_binary
end-do

TotalCost := (sum(i in 1..6,j in 1..5) morning_work_hours * ShiftCostMorning(1) * team_size * Team(i,j,1)) +
(sum(i in 1..6,j in 1..5) day_work_hours * ShiftCostDay(1) * team_size * Team(i,j,2)) +
(sum(i in 1..6,j in 1..5) evening_work_hours * ShiftCostEvening(1) * team_size * Team(i,j,3)) +
(sum(i in 1..6,j in 1..5) night_work_hours * ShiftCostNight(1) * team_size * Team(i,j,4)) +
(sum(i in 1..6,j in 6..6) morning_work_hours * ShiftCostSatMorning(1) * team_size * Team(i,j,1)) +
(sum(i in 1..6,j in 6..6) day_work_hours * ShiftCostSatDay(1) * team_size * Team(i,j,2)) +
(sum(i in 1..6,j in 6..6) evening_work_hours * ShiftCostSatEvening(1) * team_size * Team(i,j,3)) +
(sum(i in 1..6,j in 6..6) night_work_hours * ShiftCostSatNight(1) * team_size * Team(i,j,4)) +
(sum(i in 1..6,j in 7..7) morning_work_hours * ShiftCostSunMorning(1) * team_size * Team(i,j,1)) +
(sum(i in 1..6,j in 7..7) day_work_hours * ShiftCostSunDay(1) * team_size * Team(i,j,2)) +
(sum(i in 1..6,j in 7..7) evening_work_hours * ShiftCostSunEvening(1) * team_size * Team(i,j,3)) +
(sum(i in 1..6,j in 7..7) night_work_hours * ShiftCostSunNight(1) * team_size * Team(i,j,4))


cons


print_status
minimise(TotalCost)
print_result
writeln((sum(i in 1..6,j in 1..5) morning_work_hours * ShiftCostMorning(1) * team_size * getsol(Team(i,j,1))) +
(sum(i in 1..6,j in 1..5) day_work_hours * ShiftCostDay(1) * team_size * getsol(Team(i,j,2))) +
(sum(i in 1..6,j in 1..5) evening_work_hours * ShiftCostEvening(1) * team_size * getsol(Team(i,j,3))) +
(sum(i in 1..6,j in 1..5) night_work_hours * ShiftCostNight(1) * team_size * getsol(Team(i,j,4))) +
(sum(i in 1..6,j in 6..6) morning_work_hours * ShiftCostSatMorning(1) * team_size * getsol(Team(i,j,1))) +
(sum(i in 1..6,j in 6..6) day_work_hours * ShiftCostSatDay(1) * team_size * getsol(Team(i,j,2))) +
(sum(i in 1..6,j in 6..6) evening_work_hours * ShiftCostSatEvening(1) * team_size * getsol(Team(i,j,3))) +
(sum(i in 1..6,j in 6..6) night_work_hours * ShiftCostSatNight(1) * team_size * getsol(Team(i,j,4))) +
(sum(i in 1..6,j in 7..7) morning_work_hours * ShiftCostSunMorning(1) * team_size * getsol(Team(i,j,1))) +
(sum(i in 1..6,j in 7..7) day_work_hours * ShiftCostSunDay(1) * team_size * getsol(Team(i,j,2))) +
(sum(i in 1..6,j in 7..7) evening_work_hours * ShiftCostSunEvening(1) * team_size * getsol(Team(i,j,3))) +
(sum(i in 1..6,j in 7..7) night_work_hours * ShiftCostSunNight(1) * team_size * getsol(Team(i,j,4))))

print_status
writeln("MinTotalCost:",getobjval)

end-model